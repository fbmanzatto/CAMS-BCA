// <auto-generated />
using System;
using CAMS_BCA.Infrastructure.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CAMSBCA.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240903173906_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("CAMS_BCA.Domain.Auctions.Auction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Auctions");
                });

            modelBuilder.Entity("CAMS_BCA.Domain.Bids.Bid", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AuctionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Winner")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("CAMS_BCA.Domain.Vehicles.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("StartingBid")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UniqueIdentifier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("CAMS_BCA.Domain.Vehicles.HatchbackVehicle", b =>
                {
                    b.HasBaseType("CAMS_BCA.Domain.Vehicles.Vehicle");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("INTEGER");

                    b.ToTable("HatchbackVehicles");
                });

            modelBuilder.Entity("CAMS_BCA.Domain.Vehicles.SUVVehicle", b =>
                {
                    b.HasBaseType("CAMS_BCA.Domain.Vehicles.Vehicle");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("INTEGER");

                    b.ToTable("SUVVehicles");
                });

            modelBuilder.Entity("CAMS_BCA.Domain.Vehicles.SedanVehicle", b =>
                {
                    b.HasBaseType("CAMS_BCA.Domain.Vehicles.Vehicle");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("INTEGER");

                    b.ToTable("SedanVehicles");
                });

            modelBuilder.Entity("CAMS_BCA.Domain.Vehicles.TruckVehicle", b =>
                {
                    b.HasBaseType("CAMS_BCA.Domain.Vehicles.Vehicle");

                    b.Property<decimal>("LoadCapacity")
                        .HasColumnType("TEXT");

                    b.ToTable("TruckVehicles");
                });

            modelBuilder.Entity("CAMS_BCA.Domain.Auctions.Auction", b =>
                {
                    b.HasOne("CAMS_BCA.Domain.Vehicles.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("CAMS_BCA.Domain.Bids.Bid", b =>
                {
                    b.HasOne("CAMS_BCA.Domain.Auctions.Auction", "Auction")
                        .WithMany()
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CAMS_BCA.Domain.Vehicles.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("CAMS_BCA.Domain.Vehicles.HatchbackVehicle", b =>
                {
                    b.HasOne("CAMS_BCA.Domain.Vehicles.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("CAMS_BCA.Domain.Vehicles.HatchbackVehicle", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CAMS_BCA.Domain.Vehicles.SUVVehicle", b =>
                {
                    b.HasOne("CAMS_BCA.Domain.Vehicles.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("CAMS_BCA.Domain.Vehicles.SUVVehicle", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CAMS_BCA.Domain.Vehicles.SedanVehicle", b =>
                {
                    b.HasOne("CAMS_BCA.Domain.Vehicles.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("CAMS_BCA.Domain.Vehicles.SedanVehicle", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CAMS_BCA.Domain.Vehicles.TruckVehicle", b =>
                {
                    b.HasOne("CAMS_BCA.Domain.Vehicles.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("CAMS_BCA.Domain.Vehicles.TruckVehicle", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
